//=================================================================================
// StringTable.cpp
// Author: Tyler George
// Date  : September 17, 2015
//=================================================================================


////===========================================================================================
///===========================================================================================
// Includes
///===========================================================================================
////===========================================================================================

#include "Engine/Utilities/StringTable.hpp"
#include "DeveloperConsole.hpp"


////===========================================================================================
///===========================================================================================
// Static Variable Initialization
///===========================================================================================
////===========================================================================================
StringTableByID StringTable::s_stringTableByID;
StringTableByString StringTable::s_stringTableByString;
unsigned int StringTable::s_nextStringEntryID = 1;

////===========================================================================================
///===========================================================================================
// Constructors/Destructors
///===========================================================================================
////===========================================================================================

///---------------------------------------------------------------------------------
///
///---------------------------------------------------------------------------------
StringTable::StringTable()
{

}

///---------------------------------------------------------------------------------
///
///---------------------------------------------------------------------------------
StringTable::~StringTable()
{

}

////===========================================================================================
///===========================================================================================
// Initialization
///===========================================================================================
////===========================================================================================


////===========================================================================================
///===========================================================================================
// Accessors/Queries
///===========================================================================================
////===========================================================================================

///---------------------------------------------------------------------------------
///
///---------------------------------------------------------------------------------
unsigned int StringTable::GetStringID( const std::string& str )
{
    StringTableByString::iterator strTableIter = s_stringTableByString.find( str );
    if (strTableIter != s_stringTableByString.end())
        return strTableIter->second.stringID;

    StringTableEntry newEntry;
    newEntry.stringID = s_nextStringEntryID;
    newEntry.stringEntry = str;

    s_stringTableByID[newEntry.stringID] = newEntry;
    s_stringTableByString[newEntry.stringEntry] = newEntry;
       
    return s_nextStringEntryID++;
}

///---------------------------------------------------------------------------------
///
///---------------------------------------------------------------------------------
const char* StringTable::GetStringFromID( unsigned int stringID )
{
    StringTableByID::iterator strTableIter = s_stringTableByID.find( stringID );
    if (strTableIter != s_stringTableByID.end())
        return strTableIter->second.stringEntry.c_str();

    DeveloperConsole::WriteLine( "No string exists with ID: " + std::to_string( stringID ), ERROR_TEXT_COLOR );
    __debugbreak();

    return std::string( "" ).c_str();
}

////===========================================================================================
///===========================================================================================
// Mutators
///===========================================================================================
////===========================================================================================


////===========================================================================================
///===========================================================================================
// Private Functions
///===========================================================================================
////===========================================================================================

