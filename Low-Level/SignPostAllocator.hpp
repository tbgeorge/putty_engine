//=================================================================================
// SignPostAllocator.hpp
// Author: Tyler George
// Date  : November 12, 2015
//=================================================================================

///---------------------------------------------------------------------------------
/// Includes
///---------------------------------------------------------------------------------

///---------------------------------------------------------------------------------
/// Structs
///---------------------------------------------------------------------------------
struct SignPost
{
    SignPost* prev;
    SignPost* next;

    bool isFree;
    size_t size; // size of available memory, not including SignPost size
};

///---------------------------------------------------------------------------------
/// typedefs
///---------------------------------------------------------------------------------
typedef unsigned char Byte;

///---------------------------------------------------------------------------------
/// SignPostAllocator class
///---------------------------------------------------------------------------------
class SignPostAllocator
{
public:
    ///---------------------------------------------------------------------------------
    /// Constructors/Destructors
    ///---------------------------------------------------------------------------------
    SignPostAllocator();
    ~SignPostAllocator();

    ///---------------------------------------------------------------------------------
    /// Startup/Shutdown
    ///---------------------------------------------------------------------------------
    void Startup( size_t initialBufferSize );
    void Shutdown();

    ///---------------------------------------------------------------------------------
    /// Accessors/Queries
    ///---------------------------------------------------------------------------------
    size_t GetBufferSize() { return m_bufferSize; }
    void* GetBuffer() { return m_buffer; }

    ///---------------------------------------------------------------------------------
    /// Mutators
    ///---------------------------------------------------------------------------------
    void* Alloc( size_t size );
    void DeAlloc( void* ptr );

private:
    ///---------------------------------------------------------------------------------
    /// Private Member Variables
    ///---------------------------------------------------------------------------------
    void* m_buffer;
    SignPost* m_firstPost;

    size_t m_bufferSize;

};