//=================================================================================
// ProgressBar.hpp
// Author: Tyler George
// Date  : November 16, 2015
//=================================================================================

#pragma once

#ifndef __included_ProgressBar__
#define __included_ProgressBar__

///---------------------------------------------------------------------------------
/// Includes
///---------------------------------------------------------------------------------
#include "Engine/Common/EngineCommon.hpp"
#include "Engine/Input/InputSystem.hpp"
#include "Engine/Renderer/OpenGLRenderer.hpp"
#include "Engine/UI/UIElement.hpp"
#include "Engine/UI/TextBox.hpp"
#include "Engine/UI/Image.hpp"
#include "../Math/IntRange.hpp"


///---------------------------------------------------------------------------------
/// Typedefs
///---------------------------------------------------------------------------------


////===========================================================================================
///===========================================================================================
// ProgressBar Class
///===========================================================================================
////===========================================================================================
class ProgressBar : public UIElement
{
public:
    ///---------------------------------------------------------------------------------
    /// Constructors/Destructors
    ///---------------------------------------------------------------------------------
    ProgressBar( OpenGLRenderer* renderer, UIElement* parent, const IntRange& values, Font* font, const Vector2& size, const Rgba& backgroundColor, const Rgba& foregroundColor,
        Anchor anchor = BOTTOM_LEFT, const Vector2& offset = Vector2::ZERO, const float& zVal = 1.0f, const Rgba& fontColor = Rgba() );

    ~ProgressBar();

    ///---------------------------------------------------------------------------------
    /// Initialization
    ///---------------------------------------------------------------------------------
    void Startup();

    ///---------------------------------------------------------------------------------
    /// Accessors/Queries
    ///---------------------------------------------------------------------------------

    ///---------------------------------------------------------------------------------
    /// Mutators
    ///---------------------------------------------------------------------------------
    void SetPercentage( float percent ) { m_percentage = percent; }
    void SetFontSize( int fontSize ) { m_textbox->SetFontSize( fontSize ); }
    void SetValues( const IntRange& values ) { m_values = values; }

	///---------------------------------------------------------------------------------
	/// Update
	///---------------------------------------------------------------------------------
    void ProcessInput( InputSystem* inputSystem );
    void Update( bool debugModeEnabled );

	///---------------------------------------------------------------------------------
	/// Render
	///---------------------------------------------------------------------------------
    void Render( bool debugModeEnabled );

	///---------------------------------------------------------------------------------
	/// Public Member Variables
	///---------------------------------------------------------------------------------

	///---------------------------------------------------------------------------------
	/// Static Variables
	///---------------------------------------------------------------------------------


private:
	///---------------------------------------------------------------------------------
	/// Private Functions
	///---------------------------------------------------------------------------------

	///---------------------------------------------------------------------------------
	/// Private Member Variables
	///---------------------------------------------------------------------------------
    TextBox* m_textbox;

    Rgba m_fontColor;
    
    Rgba m_backgroundColor;
    Rgba m_foregroundColor;

    float m_percentage;
    IntRange m_values;
};

///---------------------------------------------------------------------------------
/// Inline function implementations
///---------------------------------------------------------------------------------

#endif